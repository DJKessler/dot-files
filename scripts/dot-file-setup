#!/bin/bash

dot_file_repo_dir="$HOME/.unixrc"
banner="****************************************"

copy_dot_file() {
  copy_src="$1"
  copy_dest="$2"
  echo "$banner"

  if [ -f "$copy_dest" ] && [ ! -L "$copy_dest" ]; then
    echo "Backing up $copy_dest";
    mv "$copy_dest" "$copy_dest".orig.bak;
    cp "$copy_src" "$copy_dest"
  elif [ ! -f "$copy_dest" ]; then
    echo "Creating copy $copy_dest";
    cp "$copy_src" "$copy_dest"
  fi
  echo ""
}


link_dot_file() {
  link_dest="$1"
  link_src="$2"
  echo "$banner"

  if [ -f "$link_dest" ] && [ ! -L "$link_dest" ]; then
    echo "Backing up $link_dest";
    mv "$link_dest" "$link_dest".orig.bak;

    echo "Creating link: $link_dest -> $link_src"
    ln -s "$link_src" "$link_dest"
  elif [ -L "$link_dest" ]; then
    echo "Updating link: $link_dest -> $link_src"
    unlink "$link_dest"
    ln -s "$link_src" "$link_dest"
  elif [ ! -f "$link_dest" ]; then
    echo "Creating link: $link_dest -> $link_src"
    ln -s "$link_src" "$link_dest"
  fi
  echo ""
}

link_dir() {
  link_dest="$1"
  link_src="$2"
  echo "$banner"

  if [ -d "$link_dest" ] && [ ! -L "$link_dest" ]; then
    echo "Backing up $link_dest to $link_dest".orig.bak
    mv "$link_dest" "$link_dest".orig.bak

    echo "Creating link: $link_dest -> $link_src"
    ln -s "$link_src" "$link_dest"
  elif [ -L "$link_dest" ]; then
    echo "Updating link: $link_dest -> $link_src"
    unlink "$link_dest"
    ln -s "$link_src" "$link_dest"
  elif [ ! -d "$link_dest" ]; then
    echo "Creating link: $link_dest -> $link_src"
    ln -s "$link_src" "$link_dest"
  fi
  echo ""
}

#################################################################
## Rename the repository directory name to a dotfile           ##
#################################################################
if [ -d "$HOME/unixrc" ]; then
  echo "Moving $HOME/unixrc to $dot_file_repo_dir"
  mv "$HOME/unixrc" "$dot_file_repo_dir"
fi

if [ -d "$dot_file_repo_dir" ]; then
  echo "initializing dot file git submodules"
  cd "$dot_file_repo_dir"
  git submodule init
  git submodule update
fi

#################################################################
## link in our grep-ackrc file                                 ##
#################################################################
link_dot_file "$HOME/.ackrc" "$dot_file_repo_dir/ack.ackrc"

#################################################################
## link in our bashrc file                                     ##
#################################################################
link_dot_file "$HOME/.bashrc" "$dot_file_repo_dir/bashrc.bash"

#################################################################
## link in our xinitrc file                                    ##
#################################################################
link_dot_file "$HOME/.xinitrc" "$dot_file_repo_dir/xinit.xinitrc"
copy_dot_file "$dot_file_repo_dir/xinit.local" "$HOME/.xinitrc-local"


#################################################################
## link in our vimrc file                                      ##
#################################################################
link_dot_file "$HOME/.vimrc" "$dot_file_repo_dir/vim.vimrc"

#################################################################
## link in our vim directory                                   ##
#################################################################
link_dir "$HOME/.vim" "$dot_file_repo_dir/vim.d"

#################################################################
## link in our urxvt configs                                   ##
#################################################################
link_dot_file "$HOME/.Xresources" "$dot_file_repo_dir/Xresources.Xresources"
link_dir "$HOME/.urxvt" "$dot_file_repo_dir/urxvt-cfgs"

#################################################################
## link in our gitconfig file                                  ##
#################################################################
link_dot_file "$HOME/.gitconfig" "$dot_file_repo_dir/git.config"

exit 0

